{"version":3,"sources":["axios.js","Row.js","requests.js","Nav.js","Banner.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","URLSearchParams","require","Row","title","fetchUrl","isTrue","useState","movies","setMovies","movieId","setMovidId","useEffect","a","get","request","console","log","data","results","fetchData","handler","movie","movieurl","original_title","name","movieTrailer","err","res","params","URL","search","className","map","onClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Nav","status","setStatus","window","addEventListener","scrollY","removeEventListener","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f3f82a6.chunk.js","sourcesContent":["import axios from 'axios'\r\n// we use axios to make request get, post etc\r\n// this is base url\r\nconst instance = axios.create({\r\n    baseURL : 'https://api.themoviedb.org/3'\r\n})\r\n\r\nexport default instance;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport Youtube from \"react-youtube\";\r\nvar URLSearchParams = require(\"url-search-params\");\r\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\nexport default function Row({ title, fetchUrl, isTrue }) {\r\n  const opt = {\r\n    height: \"400\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const [movies, setMovies] = useState([]);\r\n  const [movieId, setMovidId] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      console.log(request);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handler = async (movie) => {\r\n    if (movieId) {\r\n      setMovidId(\"\");\r\n    } else {\r\n      let movieurl = \"\";\r\n      console.log(movie.original_title || movie.name || movie.title || \" \");\r\n      await movieTrailer(\r\n        movie.original_title || movie.name || movie.title || \" \",\r\n        (err, res) => {\r\n          if (err) {\r\n            console.log(\"Error from fetch data from movieTralier\", err);\r\n          } else {\r\n            movieurl = res;\r\n            console.log(res);\r\n          }\r\n        }\r\n      );\r\n\r\n      if (movieurl) {\r\n        const params = new URLSearchParams(new URL(movieurl).search);\r\n        setMovidId(params.get(\"v\"));\r\n      }\r\n    }\r\n  };\r\n  const removehandle = () => {\r\n    setMovidId(\"\");\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            onClick={() => handler(movie)}\r\n            key={movie.id}\r\n            className={`row__poster ${isTrue && \"row__posterLarge\"}`}\r\n            src={`${baseURL}${\r\n              isTrue ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.original_title}\r\n          ></img>\r\n        ))}\r\n        {/* <div>{movieId && <Youtube videoId={movieId} opts={opt}></Youtube>}</div> */}\r\n      </div>\r\n      {movieId && <Youtube videoId={movieId} opts={opt}></Youtube>}\r\n      {movieId && (\r\n        <button className=\"remove\" onClick={() => removehandle()}>\r\n          Remove\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const API_KEY = \"dee58ae908c209ae72a973b08992e76f\"\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [status, setStatus] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        setStatus(true);\r\n      } else {\r\n        setStatus(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", () => {});\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${status && \"nav-black\"}`}>\r\n      <img\r\n        className=\"logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n      ></img>\r\n      <img\r\n        className=\"profile\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\nimport Nav from \"./Nav.js\";\r\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      return setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"auto\",\r\n        backgroundImage: `url(\"${baseURL}${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_title}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My list</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner-fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import \"./App.css\";\nimport Row from \"./Row.js\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner.js\";\nimport Nav from \"./Nav.js\";\n\nfunction App() {\n  const isTrue = false;\n  return (\n    <div className=\"app\">\n      <Banner />\n      <Row\n        title=\"NETFLIX ORGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isTrue={true}\n      />\n      <Row title=\"Treading Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}